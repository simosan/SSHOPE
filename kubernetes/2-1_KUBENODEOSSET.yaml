#========================kubernetesノードの共通のOS基本設定============================
TargetCon1:
  ConnParm:
  - hostname: 192.168.112.20,192.168.112.21,192.168.112.22
  - port: 22
  - userid: ubuntu
  #- keyfile: C:\Users\simos_000\.aws\SIMKAI_EC2.pem
  - keyfile: /Users/sim/.ssh/SIMKAI_EC2.pem
  # ope内で改行を入れたい場合は改行箇所を\nとすること
  Operation:
  ####### kubernetes MasterNode ########
  # hosts設定
  - ope: bash -c 'grep _${MASTERNODEIP} /etc/hosts; if [ $? -eq 1 ];then sudo sh -c "echo _${MASTERNODEIP} _${MASTERHOST} >> /etc/hosts"; else echo すでにhost登録されています; fi'
  - ope: bash -c 'grep _${NODE1IP} /etc/hosts; if [ $? -eq 1 ];then sudo sh -c "echo _${NODE1IP} _${NODE1HOST} >> /etc/hosts"; else echo すでにhost登録されています; fi'
  - ope: bash -c 'grep _${NODE2IP} /etc/hosts; if [ $? -eq 1 ];then sudo sh -c "echo _${NODE2IP} _${NODE2HOST} >> /etc/hosts"; else echo すでにhost登録されています; fi'
  # aptのproxy設定
  - ope: bash -c 'grep http::Proxy /var/tmp/apt.conf; if [ $? -ne 0 ];then sudo sh -c "echo Acquire::http::Proxy \"http://_${PROXYVAR};\" >> /var/tmp/apt.conf";fi'
  - ope: bash -c 'grep https::Proxy /var/tmp/apt.conf; if [ $? -ne 0 ];then sudo sh -c "echo Acquire::https::Proxy \"http://_${PROXYVAR};\" >> /var/tmp/apt.conf";fi' 2>&1 
  - ope: cat /var/tmp/apt.conf | sudo bash -c "sed 's/http:\/\/_${PROXYVAR}/\"http:\/\/_${PROXYVAR}\"/g' > /etc/apt/apt.conf" 2>&1
  # aptがなにかに掴まれているとaptできないのでキャッシュ等削除
  - ope: sudo rm /var/lib/apt/lists/lock;sudo rm /var/cache/apt/archives/lock
  # expectインストール(dpkg-preconfigureのうざい標準エラー出力を標準出力に変換(2>&1)して処理を止めない)
  - ope: "export DEBIAN_FRONTEND=noninteractive;export HTTP_PROXY=http://_${PROXYVAR};sudo apt-get update;sudo apt-get -y install expect 2>&1"
  # jqインストール(dpkg-preconfigureのうざい標準エラー出力を標準出力に変換(2>&1)して処理を止めない)
  - ope: "export DEBIAN_FRONTEND=noninteractive;export HTTP_PROXY=http://_${PROXYVAR};sudo apt-get -y install jq 2>&1"
  # ubuntuユーザパスワード設定
 # - ope: scp@put@_${SOURCEWORKDIR}\kubernetes\DebianPassChg.sh@/home/ubuntu
  - ope: scp@put@_${SOURCEWORKDIR}/kubernetes/DebianPassChg.sh@/home/ubuntu 
  - ope: bash ~/DebianPassChg.sh _${UBUNTUUSR} _${UBUNTUPASS}
  # パスワード認証の有効化
  - ope: "sudo sed -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config > /var/tmp/sshd_config" 
  - ope: "sudo mv /var/tmp/sshd_config /etc/ssh/sshd_config"
  - ope: "sudo chmod 600 /etc/ssh/sshd_config"
  - ope: "sudo chown root:root /etc/ssh/sshd_config"
  - ope: "sudo service sshd restart"
#========================masterノード固有設定============================
TargetCon2:
  ConnParm:
  - hostname: 192.168.112.20
  - port: 22
  - userid: ubuntu
  #- keyfile: C:\Users\simos_000\.aws\SIMKAI_EC2.pem
  - keyfile: /Users/sim/.ssh/SIMKAI_EC2.pem
  # ope内で改行を入れたい場合は改行箇所を\nとすること
  Operation:
  # ホスト名設定
  - ope: "sudo hostnamectl set-hostname _${MASTERHOST}"
  # サーバリブート
  - ope: "sudo reboot"
#========================workerノード(node1)の固有設定============================
TargetCon3:
  ConnParm:
  - hostname: 192.168.112.21
  - port: 22
  - userid: ubuntu
 # - keyfile: C:\Users\simos_000\.aws\SIMKAI_EC2.pem
  - keyfile: /Users/sim/.ssh/SIMKAI_EC2.pem
  # ope内で改行を入れたい場合は改行箇所を\nとすること
  Operation:
  # ホスト名設定
  - ope: "sudo hostnamectl set-hostname _${NODE1HOST}"
  # サーバリブート
  - ope: "sudo reboot"
#========================workerノード(node2)の固有設定============================
TargetCon4:
  ConnParm:
  - hostname: 192.168.112.22
  - port: 22
  - userid: ubuntu
#  - keyfile: C:\Users\simos_000\.aws\SIMKAI_EC2.pem
  - keyfile: /Users/sim/.ssh/SIMKAI_EC2.pem
  # ope内で改行を入れたい場合は改行箇所を\nとすること
  Operation:
  # ホスト名設定
  - ope: "sudo hostnamectl set-hostname _${NODE2HOST}"
  # サーバリブート
  - ope: "sudo reboot"