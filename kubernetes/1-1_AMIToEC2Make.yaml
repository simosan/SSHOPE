#========================AMIからEC2を作成============================
TargetCon1:
  ConnParm:
  - hostname: 192.168.11.13
  - port: 22
  - userid: sim
  - passwd: _${SIMPASSWD}
  # ope内で改行を入れたい場合は改行箇所を\nとすること
  Operation:
  ####### 前処理 ###########################
  # workディレクトリがある場合はすでにEC2インスタンスが生成されているので抜ける.
  - ope: "bash -c 'if [ ! -e _${WORKDIR} ]; then mkdir -p _${WORKDIR}; else echo 'すでにインスタンスが生成されてます' 1>&2; exit 255; fi'"
  ####### kubernetesは各ノード最低2vcpu，2gbメモリが必要なため注意
  ####### SecurityGroupは通常のサーバだけでなく，kubernetesの通信ポートも解放しておくこと########
  ####### https://qiita.com/suzukihi724/items/389f1a51bd89672697b3 #########################
  # MasterNodeだけEC2ロールをアタッチする（kubernetesからELBをプロビジョニングするため）
  #- ope: "aws iam create-instance-profile --instance-profile-name SIMEC2PROFILE 2>&1"
  #- ope: "aws iam add-role-to-instance-profile --instance-profile-name SIMEC2PROFILE --role-name SimEC2 2>&1"
  ####### kubernetes MasterNode作成 ########
    - ope: "aws ec2 run-instances --region ap-northeast-1 --image-id _${AMIID} \
          --key-name _${SSHKEYNAME} --instance-type _${INSTANCETYPE} \
          --subnet-id _${SUBNETID} --private-ip-address _${MASTERNODEIP} \
          --security-group-ids _${SECURITYGROUP1} _${SECURITYGROUP2} \
          --iam-instance-profile Name=_${IAMINSTANCEPROFILE} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=_${MASTERHOST}}]' > _${WORKDIR}/instance-info-_${MASTERHOST}.json 2>/dev/null" 
  # MasterNode削除用のjson生成
  - ope: "jq -r '.Instances[].InstanceId' _${WORKDIR}/instance-info-_${MASTERHOST}.json > _${WORKDIR}/instance-id-_${MASTERHOST}.txt"
  # MasterNode起動確認
  - ope: "#!/bin/bash\n
          while :\n
          do\n
             ping _${MASTERNODEIP} -c 1 >> /dev/null\n
             if [ $? == 0 ]; then\n
                echo \"_${MASTERNODEIP} ping ok\"\n
                break\n
             fi\n
             sleep 3\n
          done"
  ####### kubernetes Node1作成 ###########
  - ope: "aws ec2 run-instances --region ap-northeast-1 --image-id _${AMIID} \
          --key-name _${SSHKEYNAME} --instance-type _${INSTANCETYPE} \
          --subnet-id _${SUBNETID} --private-ip-address _${NODE1IP} \
          --security-group-ids _${SECURITYGROUP1} _${SECURITYGROUP2} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=_${NODE1HOST}}]' > _${WORKDIR}/instance-info-_${NODE1HOST}.json 2>/dev/null"
  # Node1削除用のjson生成
  - ope: "jq -r '.Instances[].InstanceId' _${WORKDIR}/instance-info-_${NODE1HOST}.json > _${WORKDIR}/instance-id-_${NODE1HOST}.txt"
  # Node1起動確認
  - ope: "#!/bin/bash\n
          while :\n
          do\n
             ping _${NODE1IP} -c 1 >> /dev/null\n
             if [ $? == 0 ]; then\n
                echo \"_${NODE1IP} ping ok\"\n
                break\n
             fi\n
             sleep 3\n
          done"
  ####### kubernetes Node2作成 ###########
  - ope: "aws ec2 run-instances --region ap-northeast-1 --image-id _${AMIID} \
          --key-name _${SSHKEYNAME} --instance-type _${INSTANCETYPE} \
          --subnet-id _${SUBNETID} --private-ip-address _${NODE2IP} \
          --security-group-ids _${SECURITYGROUP1} _${SECURITYGROUP2} \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=_${NODE2HOST}}]' > _${WORKDIR}/instance-info-_${NODE2HOST}.json 2>/dev/null"
  # Node2削除用のjson生成
  - ope: "jq -r '.Instances[].InstanceId' _${WORKDIR}/instance-info-_${NODE2HOST}.json > _${WORKDIR}/instance-id-_${NODE2HOST}.txt"
  # Node2起動確認
  - ope: "#!/bin/bash\n
          while :\n
          do\n
             ping _${NODE2IP} -c 1 >> /dev/null\n
             if [ $? == 0 ]; then\n
                echo \"_${NODE2IP} ping ok\"\n
                break\n
             fi\n
             sleep 3\n
          done"